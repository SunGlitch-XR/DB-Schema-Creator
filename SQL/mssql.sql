SELECT
    t.TABLE_NAME,
    c.COLUMN_NAME,
    c.DATA_TYPE,
    CASE
        WHEN c.IS_NULLABLE = 'YES' THEN 'YES'
        ELSE 'NO'
    END AS IS_NULLABLE,
    CASE
        WHEN pk.COLUMN_NAME IS NOT NULL THEN 'YES'
        ELSE 'NO'
    END AS IS_PRIMARY_KEY,
    CASE
        WHEN fk.COLUMN_NAME IS NOT NULL THEN 'YES'
        ELSE 'NO'
    END AS IS_FOREIGN_KEY,
    fk.REFERENCED_TABLE_NAME,
    fk.REFERENCED_COLUMN_NAME

FROM
    INFORMATION_SCHEMA.TABLES t

INNER JOIN
    INFORMATION_SCHEMA.COLUMNS c ON t.TABLE_NAME = c.TABLE_NAME
    AND t.TABLE_SCHEMA = c.TABLE_SCHEMA

LEFT JOIN (
    SELECT
        kcu.TABLE_NAME,
        kcu.TABLE_SCHEMA,
        kcu.COLUMN_NAME,
        rc1.TABLE_NAME AS REFERENCED_TABLE_NAME,
        rc1.COLUMN_NAME AS REFERENCED_COLUMN_NAME
    FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc

    INNER JOIN
        INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE kcu ON rc.CONSTRAINT_SCHEMA = kcu.CONSTRAINT_SCHEMA
        AND rc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME

    INNER JOIN
        INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE rc1 ON rc.UNIQUE_CONSTRAINT_SCHEMA = rc1.CONSTRAINT_SCHEMA
        AND rc.UNIQUE_CONSTRAINT_NAME = rc1.CONSTRAINT_NAME
) fk ON t.TABLE_NAME = fk.TABLE_NAME
AND t.TABLE_SCHEMA = fk.TABLE_SCHEMA
AND c.COLUMN_NAME = fk.COLUMN_NAME

LEFT JOIN (
    SELECT
        tc.TABLE_NAME,
        tc.TABLE_SCHEMA,
        kcu.COLUMN_NAME
    FROM
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc

    INNER JOIN
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu ON tc.CONSTRAINT_SCHEMA = kcu.CONSTRAINT_SCHEMA
        AND tc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME
        AND tc.CONSTRAINT_TYPE = 'PRIMARY KEY'
) pk ON t.TABLE_NAME = pk.TABLE_NAME
AND t.TABLE_SCHEMA = pk.TABLE_SCHEMA
AND c.COLUMN_NAME = pk.COLUMN_NAME

WHERE
    t.TABLE_TYPE = 'BASE TABLE'
    AND t.TABLE_SCHEMA NOT IN ('pg_catalog', 'information_schema')

ORDER BY
    t.TABLE_NAME,
    c.ORDINAL_POSITION;
